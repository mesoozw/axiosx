!function (e, t) {
  'object' == typeof exports && 'object' == typeof module ? module.exports = t(require('axios')) : 'function' == typeof define && define.amd ? define(['axios'], t) : 'object' == typeof exports ? exports.axiosx = t(require('axios')) : e.axiosx = t(e[void 0])
}(window, (function (e) {
  return function (e) {
    var t = {};
    
    function r (n) {
      if (t[n]) return t[n].exports;
      var o = t[n] = {i: n, l: !1, exports: {}};
      return e[n].call(o.exports, o, o.exports, r), o.l = !0, o.exports
    }
    
    return r.m = e, r.c = t, r.d = function (e, t, n) {
      r.o(e, t) || Object.defineProperty(e, t, {enumerable: !0, get: n})
    }, r.r = function (e) {
      'undefined' != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {value: 'Module'}), Object.defineProperty(e, '__esModule', {value: !0})
    }, r.t = function (e, t) {
      if (1 & t && (e = r(e)), 8 & t) return e;
      if (4 & t && 'object' == typeof e && e && e.__esModule) return e;
      var n = Object.create(null);
      if (r.r(n), Object.defineProperty(n, 'default', {
        enumerable: !0,
        value: e
      }), 2 & t && 'string' != typeof e) for (var o in e) r.d(n, o, function (t) {
        return e[t]
      }.bind(null, o));
      return n
    }, r.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default
      } : function () {
        return e
      };
      return r.d(t, 'a', t), t
    }, r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t)
    }, r.p = '', r(r.s = 3)
  }([function (e, t, r) {
    'use strict';
    var n = r(2), o = Object.prototype.toString;
    
    function i (e) {
      return '[object Array]' === o.call(e)
    }
    
    function s (e) {
      return void 0 === e
    }
    
    function c (e) {
      return null !== e && 'object' == typeof e
    }
    
    function u (e) {
      return '[object Function]' === o.call(e)
    }
    
    function a (e, t) {
      if (null != e) if ('object' != typeof e && (e = [e]), i(e)) for (var r = 0, n = e.length; r < n; r++) t.call(null, e[r], r, e); else for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && t.call(null, e[o], o, e)
    }
    
    e.exports = {
      isArray: i, isArrayBuffer: function (e) {
        return '[object ArrayBuffer]' === o.call(e)
      }, isBuffer: function (e) {
        return null !== e && !s(e) && null !== e.constructor && !s(e.constructor) && 'function' == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
      }, isFormData: function (e) {
        return 'undefined' != typeof FormData && e instanceof FormData
      }, isArrayBufferView: function (e) {
        return 'undefined' != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer
      }, isString: function (e) {
        return 'string' == typeof e
      }, isNumber: function (e) {
        return 'number' == typeof e
      }, isObject: c, isUndefined: s, isDate: function (e) {
        return '[object Date]' === o.call(e)
      }, isFile: function (e) {
        return '[object File]' === o.call(e)
      }, isBlob: function (e) {
        return '[object Blob]' === o.call(e)
      }, isFunction: u, isStream: function (e) {
        return c(e) && u(e.pipe)
      }, isURLSearchParams: function (e) {
        return 'undefined' != typeof URLSearchParams && e instanceof URLSearchParams
      }, isStandardBrowserEnv: function () {
        return ('undefined' == typeof navigator || 'ReactNative' !== navigator.product && 'NativeScript' !== navigator.product && 'NS' !== navigator.product) && ('undefined' != typeof window && 'undefined' != typeof document)
      }, forEach: a, merge: function e () {
        var t = {};
        
        function r (r, n) {
          'object' == typeof t[n] && 'object' == typeof r ? t[n] = e(t[n], r) : t[n] = r
        }
        
        for (var n = 0, o = arguments.length; n < o; n++) a(arguments[n], r);
        return t
      }, deepMerge: function e () {
        var t = {};
        
        function r (r, n) {
          'object' == typeof t[n] && 'object' == typeof r ? t[n] = e(t[n], r) : t[n] = 'object' == typeof r ? e({}, r) : r
        }
        
        for (var n = 0, o = arguments.length; n < o; n++) a(arguments[n], r);
        return t
      }, extend: function (e, t, r) {
        return a(t, (function (t, o) {
          e[o] = r && 'function' == typeof t ? n(t, r) : t
        })), e
      }, trim: function (e) {
        return e.replace(/^\s*/, '').replace(/\s*$/, '')
      }
    }
  }, function (t, r) {
    t.exports = e
  }, function (e, t, r) {
    'use strict';
    e.exports = function (e, t) {
      return function () {
        for (var r = new Array(arguments.length), n = 0; n < r.length; n++) r[n] = arguments[n];
        return e.apply(t, r)
      }
    }
  }, function (e, t, r) {
    'use strict';
    r.r(t);
    var n = r(1), o = r.n(n), i = r(0), s = r.n(i);
    
    function c (e) {
      void 0 !== typeof console && console.warn(e)
    }
    
    function u (e, t, r) {
      return function (n, ...o) {
        let i = t[e] || r[e];
        return s.a.isFunction(i) ? i(n, ...o) : n
      }
    }
    
    function a (e, t) {
      let r = e[t];
      if (void 0 === r) r = Object.create(null); else if (!s.a.isObject(r) && !s.a.isFunction(r)) {
        let e = Object.create(null);
        e._$default = r, r = e
      }
      return r
    }
    
    function f (e) {
      let t = this._$axios;
      return function (r) {
        let n = u('rebuildURL', r = r || {}, t.defaults);
        return r.url = r.url || n(e, r), t(r)
      }
    }
    
    function p (e) {
      let t = this, r = t._$axios;
      return function (n) {
        let o = t,
          i = (n = n || {}).view || t.getCurrentView(), {rebuildURL: c, validateData: a, success: f, fail: p, error: l, complete: d, dataFilter: h} = function (e, t) {
            let r = t.defaults, n = {};
            return s.a.forEach(['rebuildURL', 'dataValidate', 'success', 'fail', 'error', 'complete', 'dataFilter'], t => {
              n[t] = u(t, e, r)
            }), n
          }(n, r);
        return n.url = n.url || c(e, n), r(n).then((function (e) {
          let t = {data: h(e.data, e, i, o, n), response: e, view: i, $api: o, config: n};
          return a(t) ? f(t) : p(t), d(t), e
        })).catch((function (e) {
          return l({err: e, view: i, $api: o, config: n}), d({
            err: e,
            view: i,
            $api: o,
            config: n
          }), Promise.reject(reason)
        }))
      }
    }
    
    function l (e, t, r, n, o) {
      s.a.forEach(e, (e, i) => {
        let c = function (e, t) {
          t = t || '\\$', e += '';
          let r = new RegExp(`^(${t})+`, 'g'), n = new RegExp(`(${t})+$`, 'g'), o = new RegExp(`(${t})_+`, 'g'),
            i = new RegExp(`_+(${t})`, 'g'), s = RegExp(`(${t})+`, 'g'), c = RegExp(`${t}`), u = new RegExp(`${t}|_`),
            a = e;
          return a = a.replace(/\s+/g, '').replace(r, '').replace(n, '').replace(s, '$1').replace(o, '$1').replace(i, '$1'), u.test(a) && (a = a.toLowerCase().replace(/_+([a-z])/g, (function (e, t) {
            return t.toUpperCase()
          }))), a = a.split(c), a
        }(i, r), u = c.length - 1;
        c.reduce((t, i, c) => (c === u ? s.a.isObject(e) ? (t[i] = a(t, i), l(e, t[i], r, n, o)) : (t[i] = n(e), t[`${i}Await`] = o(e)) : (t[i] = a(t, i), t = t[i]), t), t)
      })
    }
    
    class d {
      constructor (e, t) {
        this.axiosInstance = e, this.nameIndexMap = {request: {}, response: {}}, this.handleRegisterType(t)
      }
      
      registerInterceptor (e, t, r) {
        let n, o;
        if (Array.isArray(t) ? (n = t[0], o = t[1]) : s.a.isObject(t) && (n = t.fulfilled, o = t.rejected), !this.checkType(r)) return void c('interceptor type must be request or response');
        let i = this.axiosInstance.interceptors[r].use(n, o);
        this.mapNameIndex(e, i, r)
      }
      
      checkType (e) {
        return 'request' === e || 'response' === e
      }
      
      mapNameIndex (e, t, r) {
        this.checkType(r) ? this.nameIndexMap[r][e] = t : c('interceptor type must be request or response')
      }
      
      registerInterceptors (e, t) {
        s.a.forEach(e, (e, r) => {
          this.registerInterceptor(r, e, t)
        })
      }
      
      handleRegisterType (e) {
        e.requestInterceptors && this.registerInterceptors(e.requestInterceptors, 'request'), e.responseInterceptors && this.registerInterceptors(e.responseInterceptors, 'response')
      }
      
      ejectRequestInterceptor (e) {
        this.ejectInterceptor(e, 'request')
      }
      
      ejectResponseInterceptor (e) {
        this.ejectInterceptor(e, 'response')
      }
      
      ejectInterceptor (e, t) {
        if (!this.checkType(t)) return this.ejectRequestInterceptor(e), void this.ejectResponseInterceptor(e);
        let r = this.nameIndexMap[t][e];
        void 0 !== r && (this.axiosInstance.interceptors[t].eject(r), delete this.nameIndexMap[t][e])
      }
      
      ejectRequestInterceptors (e) {
        if (e) Array.isArray(e) || (e = [e]), s.a.forEach(e, e => {
          this.ejectRequestInterceptor(e)
        }); else {
          let e = this.nameIndexMap.request;
          s.a.forEach(e, (e, t) => {
            this.ejectRequestInterceptor(t)
          })
        }
      }
      
      ejectResponseInterceptors (e) {
        if (e) Array.isArray(e) || (e = [e]), s.a.forEach(e, e => {
          this.ejectResponseInterceptor(e)
        }); else {
          let e = this.nameIndexMap.response;
          s.a.forEach(e, (e, t) => {
            this.ejectResponseInterceptor(t)
          })
        }
      }
      
      ejectInterceptors (e, t) {
        'request' === t ? this.ejectRequestInterceptors(e) : 'response' === t ? this.ejectResponseInterceptors(e) : (this.ejectRequestInterceptors(e), this.ejectResponseInterceptors(e))
      }
    }
    
    class h {
      constructor (e, t) {
        this._$options = s.a.isObject(e) ? e : {}, this.initAxiosUserConfigs(t), this.addUserMethods(this._$options.urls, this._$options.delimiter)
      }
      
      initAxiosUserConfigs (e) {
        let t = this._$options.axiosConfig || {};
        e instanceof h ? (this._$axios = e._$axios, this._$interceptController = e._$interceptController) : (this._$axios = o.a.create(t), this._$interceptController = new d(this._$axios, t))
      }
      
      createWithMonoAxios () {
        return new h(this._$options, this)
      }
      
      addUserMethods (e, t) {
        if (!s.a.isObject(e)) return;
        l(e, this, t, p.bind(this), f.bind(this))
      }
      
      getImportAxios () {
        return o.a
      }
      
      getCurrentView () {
        return this._$view
      }
    }
    
    let y;
    r.d(t, 'API', (function () {
      return h
    }));
    let b = {
      API: h, install: function (e) {
        y && e === y || (y = e, function (e) {
          if (Number(e.version.split('.')[0]) >= 2) e.mixin({beforeCreate: t}); else {
            const r = e.prototype._init;
            e.prototype._init = function (e = {}) {
              e.init = e.init ? [t].concat(e.init) : t, r.call(this, e)
            }
          }
          
          function t () {
            const e = this.$options;
            e.api ? this.$api = 'function' == typeof e.api ? e.api() : e.api : e.parent && e.parent.$api && (this.$api = e.parent.$api.createWithMonoAxios()), this.$api && (this.$api._$view = this, e.store && (e.store = 'function' == typeof e.store ? e.store() : e.store, e.store.$api = this.$api))
          }
        }(y))
      }, version: '1.0.0'
    };
    t.default = b
  }])
}));
